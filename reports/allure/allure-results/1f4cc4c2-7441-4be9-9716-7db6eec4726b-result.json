{"name": "Test get user by ID", "status": "failed", "statusDetails": {"message": "AssertionError: Status code assertion failed. Expected: 201, Got: 404", "trace": "self = <tests.api.test_cases.test_user_api.TestUserAPI object at 0x000001826ABB7110>\n\n    @allure.title(\"Test get user by ID\")\n    @allure.description(\"Verify user can be retrieved by ID\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.regression\n    @pytest.mark.api\n    def test_get_user_by_id(self):\n        \"\"\"Test get user by ID\"\"\"\n        # First create a user\n        user_data = {\n            \"username\": self.faker.user_name(),\n            \"email\": self.faker.email(),\n            \"first_name\": self.faker.first_name(),\n            \"last_name\": self.faker.last_name()\n        }\n>       created_user = self.user_service.create_user(user_data)\n\ntests\\api\\test_cases\\test_user_api.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\api\\services\\user_service.py:18: in create_user\n    self.validate_status_code(response, 201)\ncore\\base\\base_api.py:260: in validate_status_code\n    self.api_client.validate_response_status(response, expected_status)\ncore\\utils\\api_client_utility.py:1650: in validate_response_status\n    return self.assert_status_code(expected_status, response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <core.utils.api_client_utility.APIClientUtility object at 0x000001826ABB7B10>, expected_code = 201, response = <Response [404]>\n\n    def assert_status_code(self, expected_code: int,\n                           response: requests.Response = None) -> bool:\n        \"\"\"\n        Assert response status code\n    \n        Args:\n            expected_code: Expected status code\n            response: Response object (uses last response if None)\n    \n        Returns:\n            True if assertion passes\n    \n        Raises:\n            AssertionError if status code doesn't match\n        \"\"\"\n        resp = response if response else self.response\n        actual_code = resp.status_code\n    \n>       assert actual_code == expected_code, \\\n            f\"Status code assertion failed. Expected: {expected_code}, Got: {actual_code}\"\nE       AssertionError: Status code assertion failed. Expected: 201, Got: 404\n\ncore\\utils\\api_client_utility.py:654: AssertionError"}, "description": "Verify user can be retrieved by ID", "steps": [{"name": "Create user", "status": "failed", "statusDetails": {"message": "AssertionError: Status code assertion failed. Expected: 201, Got: 404\n", "trace": "  File \"C:\\Users\\rohitk\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\rohitk\\Desktop\\Hybrid-Playwright-Python-Framework\\tests\\api\\services\\user_service.py\", line 18, in create_user\n    self.validate_status_code(response, 201)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rohitk\\Desktop\\Hybrid-Playwright-Python-Framework\\core\\base\\base_api.py\", line 260, in validate_status_code\n    self.api_client.validate_response_status(response, expected_status)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rohitk\\Desktop\\Hybrid-Playwright-Python-Framework\\core\\utils\\api_client_utility.py\", line 1650, in validate_response_status\n    return self.assert_status_code(expected_status, response)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rohitk\\Desktop\\Hybrid-Playwright-Python-Framework\\core\\utils\\api_client_utility.py\", line 654, in assert_status_code\n    assert actual_code == expected_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "POST request to: '/users'", "status": "passed", "attachments": [{"name": "Request Payload", "source": "4a4419c3-720b-4d18-b62b-fb4d51bba24c-attachment.json", "type": "application/json"}, {"name": "Response Body (Status: 404)", "source": "fc02786c-bc9d-4868-88e3-c380ceeaad83-attachment.txt", "type": "text/plain"}, {"name": "Response Headers", "source": "13cfe16e-25b0-4b86-a042-e530d3037ab6-attachment.json", "type": "application/json"}, {"name": "Response Metadata", "source": "cd40ee1d-2624-436b-aedb-c5403293529b-attachment.json", "type": "application/json"}], "parameters": [{"name": "endpoint", "value": "'/users'"}, {"name": "payload", "value": "{'username': 'uhinton', 'email': 'robert89@example.org', 'first_name': 'Amanda', 'last_name': 'Sherman'}"}, {"name": "headers", "value": "None"}, {"name": "files", "value": "None"}], "start": 1759762901660, "stop": 1759762903022}, {"name": "Validate status code is 201", "status": "failed", "statusDetails": {"message": "AssertionError: Status code assertion failed. Expected: 201, Got: 404\n", "trace": "  File \"C:\\Users\\rohitk\\Desktop\\Hybrid-Playwright-Python-Framework\\core\\base\\base_api.py\", line 260, in validate_status_code\n    self.api_client.validate_response_status(response, expected_status)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rohitk\\Desktop\\Hybrid-Playwright-Python-Framework\\core\\utils\\api_client_utility.py\", line 1650, in validate_response_status\n    return self.assert_status_code(expected_status, response)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rohitk\\Desktop\\Hybrid-Playwright-Python-Framework\\core\\utils\\api_client_utility.py\", line 654, in assert_status_code\n    assert actual_code == expected_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1759762903022, "stop": 1759762903023}], "parameters": [{"name": "user_data", "value": "{'username': 'uhinton', 'email': 'robert89@example.org', 'first_name': 'Amanda', 'last_name': 'Sherman'}"}], "start": 1759762901660, "stop": 1759762903024}], "attachments": [{"name": "log", "source": "3206c173-4a82-4392-aec7-181b414a2ac4-attachment.txt", "type": "text/plain"}], "start": 1759762901659, "stop": 1759762903024, "uuid": "68eaef48-c317-4923-8847-129f20d69a2b", "historyId": "7b27d779b7b5577580b94341f095fb7e", "testCaseId": "7b27d779b7b5577580b94341f095fb7e", "fullName": "tests.api.test_cases.test_user_api.TestUserAPI#test_get_user_by_id", "labels": [{"name": "feature", "value": "TestUserAPI"}, {"name": "story", "value": "test_get_user_by_id"}, {"name": "priority", "value": "Low"}, {"name": "framework", "value": "Hybrid Automation Framework"}, {"name": "test_class", "value": "TestUserAPI"}, {"name": "story", "value": "User CRUD Operations"}, {"name": "feature", "value": "User API"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "api"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.api.test_cases"}, {"name": "suite", "value": "test_user_api"}, {"name": "subSuite", "value": "TestUserAPI"}, {"name": "host", "value": "ROHITK"}, {"name": "thread", "value": "17968-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.test_cases.test_user_api"}]}